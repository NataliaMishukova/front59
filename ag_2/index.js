// * 1. –Ω–∞—Ö–æ–¥–∏–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∫–ª–∞–¥–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const form = document.querySelector("#form-book");
const ul = document.querySelector("#list-book");
const input = document.querySelectorAll(".input");
const clearBtn = document.getElementById("clear-btn");
const clearDoneBtn = document.getElementById("clear-done-btn");

// –º–∞—Å—Å–∏–≤ –ø–æ–¥ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥
const bookList = [
  { book: "–¢–∏—Ö–∏–π –î–æ–Ω", author: "–ú–∏—Ö–∞–∏–ª –®–æ–ª–æ—Ö–æ–≤" },
  { book: "–°—Ç–æ –ª–µ—Ç –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–∞", author: "–ì–∞–±—Ä–∏—ç–ª—å –ì–∞—Ä—Å–∏–∞ –ú–∞—Ä–∫–µ—Å" },
  { book: "–¢–∏—Ö–∏–π –î–æ–Ω", author: "–≠—Ä–∏—Ö –ú–∞—Ä–∏—è –†–µ–º–∞—Ä–∫" },
  { book: "–¢—Ä–∏—É–º—Ñ–∞–ª—å–Ω–∞—è –∞—Ä–∫–∞", author: "–°–æ–º–µ—Ä—Å–µ—Ç –ú–æ—ç–º" },
  { book: "–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", author: "–ú–∏—Ö–∞–∏–ª –ë—É–ª–≥–∞–∫–æ–≤" },
  { book: "–î–æ–∫—Ç–æ—Ä –ñ–∏–≤–∞–≥–æ", author: "–ë–æ—Ä–∏—Å –ü–∞—Å—Ç–µ—Ä–Ω–∞–∫" },
  { book: "–û—Ç—Ü—ã –∏ –¥–µ—Ç–∏", author: "–ò–≤–∞–Ω –¢—É—Ä–≥–µ–Ω–µ–≤" },
  { book: "–ò–¥–∏–æ—Ç", author: "–§–µ–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π" },
];

// —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–µ—Ä–≤–æ–π –±—É–∫–≤—ã –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –≤ –∑–∞–≥–ª–∞–≤–Ω—É—é
function toUpper(str) {
  return str
    .toLowerCase()
    .split(" ")
    .map(
      (word) => (word.length > 3 ? word[0].toUpperCase() + word.slice(1) : word) // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–æ–≤–æ –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ –æ–Ω–æ –∫–æ—Ä–æ—Ç–∫–æ–µ
    )
    .join(" ");
}

// —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥
function renderList() {
  ul.innerHTML = "";
  bookList.forEach((el) => {
    const li = document.createElement("li");
    li.textContent = `"${el.book}" –æ—Ç ${el.author}`;
    li.addEventListener("click", (event) => {
      event.target.classList.toggle("done");
    });
    ul.append(li);
  });
}

// –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
renderList();

// –æ–±–Ω—É–ª—è–µ–º placeholder –ø—Ä–∏ –∫–ª–∏–∫–µ –≤ –ø–æ–ª–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∏ –∫–ª–∏–∫–µ –≤ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ
if (input) {
  for (let i = 0; i < input.length; i++) {
    input[i].addEventListener("click", function () {
      let thisElement = this;

      let savePlaceholder = this.getAttribute("placeholder");

      this.setAttribute("placeholder", " ");
      document.addEventListener("mouseup", function () {
        thisElement.setAttribute("placeholder", savePlaceholder);
      });
    });
  }
}

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è —Ñ–æ—Ä–º—ã
form.addEventListener("submit", (event) => {
  event.preventDefault();

  // –∑–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ input, –ø—Ä–∏—á–µ—Å—ã–≤–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä
  const book = {
    book: event.target.book.value
      .trim()
      .replace(/^[^a-z–∞-—è—ë]*([a-z–∞-—è—ë])/i, (m) => m.toUpperCase()),
    author: toUpper(event.target.author.value.trim()),
  };

  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
  if (!event.target.book.value.trim() || !event.target.author.value.trim()) {
    alert("–ü–æ–ª—è –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏!");
    return;
  }

  // —á–∏—Å—Ç–∏–º input
  event.target.book.value = "";
  event.target.author.value = "";

  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
  const check = bookList.find(
    (el) =>
      el.author.toLowerCase() === book.author.toLowerCase() &&
      el.book.toLowerCase() === book.book.toLowerCase()
  );

  if (check) {
    alert(
      `"${book.book}" –æ—Ç ${book.author}` + "\n\n" + "–≠—Ç–∞ –∫–Ω–∏–≥–∞ —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ! üôÖ‚Äç‚ôÇÔ∏è"
    );
  } else {
    bookList.push(book);
    renderList();
  }
});

//—á–∏—Å—Ç–∏–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫

clearBtn.addEventListener("click", () => {
  bookList.length = 0;
  renderList();
});

// —á–∏—Å—Ç–∏–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
clearDoneBtn.addEventListener("click", () => {
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ li —Å –∫–ª–∞—Å—Å–æ–º done
  const doneItems = document.querySelectorAll("#list-book li.done");
  doneItems.forEach((li) => {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–∏–≥–∏ –∏–∑ li
    const text = li.textContent.replace(/"(.+)" –æ—Ç (.+)/, "$1|$2");
    const [book, author] = text.split("|");
    // –£–¥–∞–ª—è–µ–º –∏–∑ –º–∞—Å—Å–∏–≤–∞ bookList —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–∏–≥—É
    const idx = bookList.findIndex(
      (el) => el.book === book && el.author === author
    );
    if (idx !== -1) bookList.splice(idx, 1);
  });
  renderList();
});